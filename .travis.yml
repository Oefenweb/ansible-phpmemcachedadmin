---
sudo: required
dist: xenial

language: python
python:
  - "2.7"
  - "3.5"

env:
  - ANSIBLE_VERSION=latest
  - ANSIBLE_VERSION=2.10.2
  - ANSIBLE_VERSION=2.10.1
  - ANSIBLE_VERSION=2.10.0
  - ANSIBLE_VERSION=2.9.14
  - ANSIBLE_VERSION=2.9.13
  - ANSIBLE_VERSION=2.9.12
  - ANSIBLE_VERSION=2.9.11
  - ANSIBLE_VERSION=2.9.10
  - ANSIBLE_VERSION=2.9.9
  - ANSIBLE_VERSION=2.9.8
  - ANSIBLE_VERSION=2.9.7
  - ANSIBLE_VERSION=2.9.6
  - ANSIBLE_VERSION=2.9.5
  - ANSIBLE_VERSION=2.9.4
  - ANSIBLE_VERSION=2.9.3
  - ANSIBLE_VERSION=2.9.2
  - ANSIBLE_VERSION=2.9.1
  - ANSIBLE_VERSION=2.9.0
  - ANSIBLE_VERSION=2.8.16
  - ANSIBLE_VERSION=2.8.15
  - ANSIBLE_VERSION=2.8.14
  - ANSIBLE_VERSION=2.8.13
  - ANSIBLE_VERSION=2.8.12
  - ANSIBLE_VERSION=2.8.11
  - ANSIBLE_VERSION=2.8.10
  - ANSIBLE_VERSION=2.8.9
  - ANSIBLE_VERSION=2.8.8
  - ANSIBLE_VERSION=2.8.7
  - ANSIBLE_VERSION=2.8.6
  - ANSIBLE_VERSION=2.8.5
  - ANSIBLE_VERSION=2.8.4
  - ANSIBLE_VERSION=2.8.3
  - ANSIBLE_VERSION=2.8.2
  - ANSIBLE_VERSION=2.8.1
  - ANSIBLE_VERSION=2.8.0

branches:
  only:
    - master

before_install:
  - sudo apt-get update -qq

install:
  # Install Ansible.
  - if [ "$ANSIBLE_VERSION" = "latest" ]; then pip install ansible; else pip install ansible==$ANSIBLE_VERSION; fi
  - if [ "$ANSIBLE_VERSION" = "latest" ]; then pip install ansible-lint; fi

script:
  # Check the role/playbook's syntax.
  - ansible-playbook -i tests/inventory tests/test.yml --syntax-check

  # Run the role/playbook with ansible-playbook.
  - ansible-playbook -i tests/inventory tests/test.yml -vvvv

  # Run the role/playbook again, checking to make sure it's idempotent.
  - >
    ansible-playbook -i tests/inventory tests/test.yml
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

  - if [ "$ANSIBLE_VERSION" = "latest" ]; then ansible-lint tests/test.yml; fi

notifications:
  email: false
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
  slack:
    rooms:
      secure: "OItpYkE+LmUCRbGnhFD0YpiQSLSCoyJorax2L33LM0L2OlAvQoHRwYr0mdzsUssHN8aVKj39luucVyVupOXwAMp7b8xV33xQ5QAjyL/Q/EiYU5iWQQW918hs+Bk4l0ToUzIh9b8jX6Bs6xklMvSZyoDAT0gZyZQ3TaXTxsD47u7m57alKEIGqZZUb7iRPgHzhZGzdRkmisMntRN1kX4EICZXqBkW8OxZzUVim/S1b1Eyq3hTmPV1d7wnM+wCPTbpgaMgaYvvNFHRw1vxxAzQoVwAAOeoAarGVeTKYy9UpXkBZjrCbqxN9Kw2HzDy6TYzGuS+lTNUhCODT03tmidSONhOQNLAcE99sijeEvjUP5lsVcMLo8mugzHrbCNfOAyewUC7ccf5WW60ia276d9rJU39FioAEcpbYkO7dz+Um+lTP2yUc4P1T9lZrq905WNWAD/bzLLQOm20tfG0/RmR7rh+RxPPlQDGcn8DPXuGiNu6Fg+oTDKr05gnFBaB4wYh+pTFRDvlSHA02HkAWqfVDjDn5YAbhcHt6vwsf+Qpkmz5d/hEI8fBp0owj+gBxY09s8ppUKTMjTjdYDUqtTE9QU8sWM0xeOND33y+xGU1HtPfq94gaexln26ttM9p7trXXouIbIl+kWp7s6+n0RNlFTfPnOtuiL7qoOlFabzCiYc="
