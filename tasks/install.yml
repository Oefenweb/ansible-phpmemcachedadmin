# tasks file
---
- name: create (install) directory
  ansible.builtin.file:
    path: "{{ item.dest }}/phpMemcachedAdmin-{{ phpmemcachedadmin_version }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  with_items: "{{ phpmemcachedadmin_install_dirs }}"
  when: item.state is undefined or item.state == 'present'
  tags:
    - phpmemcachedadmin-install-directory

- name: install
  ansible.builtin.unarchive:
    src: "{{ phpmemcachedadmin_download_path }}/{{ phpmemcachedadmin_download_url | basename }}"
    dest: "{{ item.dest }}/phpMemcachedAdmin-{{ phpmemcachedadmin_version }}"
    creates: "{{ item.dest }}/phpMemcachedAdmin-{{ phpmemcachedadmin_version }}/index.php"
    copy: false
  with_items: "{{ phpmemcachedadmin_install_dirs }}"
  when: item.state is undefined or item.state == 'present'
  tags:
    - phpmemcachedadmin-install-unarchive

- name: set file permissions  # noqa risky-shell-pipe
  ansible.builtin.shell: >
    find . -type f ! -perm 0644 -print0 | xargs --no-run-if-empty -0 chmod -c 0644
  args:
    chdir: "{{ item.dest }}/phpMemcachedAdmin-{{ phpmemcachedadmin_version }}"
  register: _file_permissions
  changed_when: "_file_permissions.stdout_lines | length > 0"
  with_items: "{{ phpmemcachedadmin_install_dirs }}"
  when: item.state is undefined or item.state == 'present'
  tags:
    - phpmemcachedadmin-install-file-permissions

- name: set dir permissions  # noqa risky-shell-pipe
  ansible.builtin.shell: >
    find . -type d ! -perm 0755 -print0 | xargs --no-run-if-empty -0 chmod -c 0755
  args:
    chdir: "{{ item.dest }}/phpMemcachedAdmin-{{ phpmemcachedadmin_version }}"
  register: _dir_permissions
  changed_when: "_dir_permissions.stdout_lines | length > 0"
  with_items: "{{ phpmemcachedadmin_install_dirs }}"
  when: item.state is undefined or item.state == 'present'
  tags:
    - phpmemcachedadmin-install-dir-permissions

- name: set file owner and group
  ansible.builtin.file:
    path: "{{ item.0.dest }}/phpMemcachedAdmin-{{ phpmemcachedadmin_version }}/{{ item.1 }}"
    owner: "{{ item.0.owner }}"
    group: "{{ item.0.group | default(item.0.owner) }}"
  with_nested:
    - "{{ phpmemcachedadmin_install_dirs }}"
    - "{{ phpmemcachedadmin_writable_paths }}"
  when: item.0.state is undefined or item.0.state == 'present'
  tags:
    - phpmemcachedadmin-install-owner-froup
